import { type NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import { trpc } from '../utils/trpc'

const Home: NextPage = () => {
  // tRPC
  const { mutate, data, isLoading } = trpc.youtube.youtube.useMutation()

  const [input, setInput] = useState({
    alias: '',
    topic: '',
  })

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div className='absolute inset-0 flex items-center justify-center bg-black/50'>
        <Image className='-z-10' src='/milky-way.jpg' alt='milky way' fill />

        <div className='relative w-full max-w-lg'>
          <div className='relative z-10 flex flex-col items-center gap-10 rounded-md border border-indigo-900/50 bg-black/30 px-28 py-16 backdrop-blur-sm'>
            <h2 className='text-2xl font-medium text-white'>Supatitle v.1</h2>

            <div className='w-full'>
              <label htmlFor='' className='block text-sm font-medium text-gray-200'>
                Alias
              </label>
              <div className='mt-1 flex rounded-md shadow-sm'>
                <span className='inline-flex items-center rounded-l-md border border-r-0 border-gray-700 bg-gray-800 px-3 text-gray-300 sm:text-sm'>
                  @
                </span>
                <input
                  value={input.alias}
                  onChange={(e) => setInput((prev) => ({ ...prev, alias: e.target.value }))}
                  type='text'
                  placeholder='alias'
                  className='block w-full min-w-0 flex-1 rounded-none rounded-r-md border-gray-700 bg-gray-800 px-3 py-2 text-white focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'
                />
              </div>
            </div>

            <div className='w-full'>
              <label htmlFor='' className='block text-sm font-medium text-gray-200'>
                Topic
              </label>
              <div className='mt-1'>
                <input
                  value={input.topic}
                  onChange={(e) => setInput((prev) => ({ ...prev, topic: e.target.value }))}
                  type='text'
                  placeholder='topic'
                  className='block w-full min-w-0 flex-1 rounded-md border-gray-700 bg-gray-800 px-3 py-2 text-white focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'
                />
              </div>
            </div>

            <button
              type='button'
              disabled={!input.alias || !input.topic}
              onClick={() => {
                mutate({ topic: input.topic, alias: '@' + input.alias })
              }}
              className='mt-6 flex h-10 w-full items-center justify-center rounded-full border-2 border-transparent bg-indigo-700 py-4 px-6 text-sm font-medium text-white transition hover:border-2 hover:border-indigo-700 hover:bg-indigo-900 disabled:cursor-not-allowed disabled:bg-white disabled:text-gray-600 disabled:hover:border-gray-200 md:mt-0 md:w-fit'>
              {isLoading ? 'Generating...' : 'Generate title'}
            </button>

            {data ? (
              <div className='flex w-full flex-col items-center gap-1 text-center text-white'>
                <span className='text-lg font-medium'>Your result:</span>
                <span className='text-base'>{data}</span>
              </div>
            ) : null}
          </div>

          <div className='custom-gradient absolute inset-0 -z-10 opacity-50' />
        </div>
      </div>
    </>
  )
}

export default Home
